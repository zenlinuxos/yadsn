#!/bin/sh

# Copyright (C) 2020 David Alfonso
#
# This file is part of yadsn.
#
# yadsn is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# yadsn is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with yadsn.  If not, see <https://www.gnu.org/licenses/>.

. lib/file-format.sh

setup() {
	mkdir -p "$ts_test_dir"
	export SN_DATA="$ts_test_dir"
	cd "$ts_test_dir" || error "unable to enter test directory"
}

teardown() {
	rm -r "$ts_test_dir"
}

error() {
	echo "Error: $1"
	exit 1
}

test_create() {
	create_file "test"
	assert_status 0 $?
	find . -type f | wc -l | assert_output "\
1
"
}

test_export_text_doublequotes_escaped() {
	export_text "Hello\"all!" | assert_output "\
Hello\"\"all!
"
}

test_export_text_newlines() {
	printf "Hello\nall\n!" | assert_output "\
Hello
all
!"
	text_export "Hello
all
!" | assert_output "\
Hello<NEWLINE>all<NEWLINE>!
"
}

test_append_file_simple() {
	create_file "test"
	append_file "test" "one field and line"
	assert_output "\
\"one field and line\"
" < "test"
}

test_append_file_multiline() {
	create_file "test"
	append_file "test" "one line
another line"
	assert_output "\
\"one line<NEWLINE>another line\"
" < "test"
}

test_append_file_multifield() {
	create_file "test"
	append_file "test" "field 1" "another field"
	assert_output "\
\"field 1\",\"another field\"
" < "test"
}

test_append_file_full() {
	create_file "test"
	append_file "test" "field \"1\"" "another field" "third with
multiple
lines"
	assert_output "\
\"field \"\"1\"\"\",\"another field\",\"third with<NEWLINE>multiple<NEWLINE>lines\"
" < "test"
}

test_import_text() {
	import_text "Hello<NEWLINE>all" | assert_output "\
Hello
all
"
	import_text "Hello<NEWLINE>all<NEWLINE>" | assert_output "\
Hello
all

"
	import_text "Hello\"\"all\"\"" | assert_output "\
Hello\"all\"
"
}


export TS_COLOR="true"
#export TS_DEBUG="true"

. tests/ts
